{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Atishay\\\\OneDrive\\\\Desktop\\\\Round 1A\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [result, setResult] = useState(null);\n  const handleUpload = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const response = await fetch(\"http://localhost:8000/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await response.json();\n\n    // Safely check structure\n    console.log(\"API result:\", data);\n    setResult(data.result.summary); // Access summary from backend response\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LLM Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Title: \", result.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Language: \", result.language]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Outline:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(result.outline, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X4bz0btR6WTE+CkTerVmRyY/5iQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","result","setResult","handleUpload","e","file","target","files","formData","FormData","append","response","fetch","method","body","data","json","console","log","summary","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","marginTop","title","language","JSON","stringify","outline","_c","$RefreshReg$"],"sources":["C:/Users/Atishay/OneDrive/Desktop/Round 1A/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    const response = await fetch(\"http://localhost:8000/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    // Safely check structure\r\n    console.log(\"API result:\", data);\r\n    setResult(data.result.summary); // Access summary from backend response\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>LLM Extractor</h1>\r\n      <input type=\"file\" onChange={handleUpload} />\r\n\r\n      {result && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h2>Title: {result.title}</h2>\r\n          <p>Language: {result.language}</p>\r\n\r\n          <h3>Outline:</h3>\r\n          <pre>{JSON.stringify(result.outline, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAE7B,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;IAElC;IACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,IAAI,CAAC;IAChCb,SAAS,CAACa,IAAI,CAACd,MAAM,CAACkB,OAAO,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,oBACErB,OAAA;IAAKsB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BxB,OAAA;MAAAwB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEzB;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE5CzB,MAAM,iBACLH,OAAA;MAAKsB,KAAK,EAAE;QAAES,SAAS,EAAE;MAAO,CAAE;MAAAP,QAAA,gBAChCxB,OAAA;QAAAwB,QAAA,GAAI,SAAO,EAACrB,MAAM,CAAC6B,KAAK;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9B5B,OAAA;QAAAwB,QAAA,GAAG,YAAU,EAACrB,MAAM,CAAC8B,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAElC5B,OAAA;QAAAwB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB5B,OAAA;QAAAwB,QAAA,EAAMU,IAAI,CAACC,SAAS,CAAChC,MAAM,CAACiC,OAAO,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CApCQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}